{
    "openapi": "3.0.0",
    "info": {
        "name": "Starboard Stats",
        "description": "Stats API for fetching various starboard data."
    },
    "servers": [
        {
            "url": "https://smugpi.risu.dev"
        },
        {
            "url": "http://localhost:3001"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Authorization routes"
        },
        {
            "name": "channels",
            "description": "Discord channel routes"
        },
        {
            "name": "posts",
            "description": "Discord post routes"
        },
        {
            "name": "users",
            "description": "Discord user routes"
        }
    ],
    "paths": {
        "/auth/authorize": {
            "post": {
                "tags": [ "auth" ],
                "summary": "authorizes a user and generates their login token",
                "description": "When discord authorization is turned on, this route is used to verify if a user is in the Discord server where this data belongs. Supplying the auth token will unlock more api data. To minimize the sensitive data required to verify this info, it uses the bot to check the Discord server for a user's presence. That way, the auth code required for this route will only request your username, avatar, and banner.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Auth object for confirming user",
                        "required": true,
                        "schema": {
                            "$ref": "#components/schemas/Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/channels": {
            "get": {
                "tags": [ "channels" ],
                "summary": "get a list of channels with saved data",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Filter channel list with search term."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Skim"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/channels/top": {
            "get": {
                "tags": [ "channels" ],
                "summary": "get list of top channels by post and reaction count",
                "description": "",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/TopChannels"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/channels/timeline": {
            "get": {
                "tags": [ "channels" ],
                "summary": "get a timeline of post and reaction count",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "channel",
                        "description": "filter channel timeline data by channel ID"
                    },
                    {
                        "in": "query",
                        "name": "interval",
                        "description": "get timeline data by month instead of day",
                        "schema": {
                            "type": "string",
                            "enum": ["monthly"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Timeline"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },

        "/posts": {
            "get": {
                "tags": [ "posts" ],
                "summary": "get specified posts",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Amount of posts to return. Allowed range is 1-5. Default is 1."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Specify the pagination number for the query. Default is 1."
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "description": "Retrieve any posts before specific date. ISO format preferred."
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "description": "Retrieve any posts after specific date. ISO format preferred."
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Filter message content by string."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Specify a sort method. Options: date, msgContent, reactions, random. Default is date."
                    },
                    {
                        "in": "query",
                        "name": "channel",
                        "description": "Specify a channel ID to query for."
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "description": "Specify a user ID to query for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },

        "/posts/{id}": {
            "get": {
                "tags": [ "posts" ],
                "summary": "get specific post by ID",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Discord ID of a post"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },

        "/users": {
            "get": {
                "tags": [ "users" ],
                "summary": "get a list of users with saved data",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "required": true,
                        "name": "filter",
                        "description": "Filter user list with search term"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Amount of posts to return. Allowed range is 1-10. Default is 5."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Specify the pagination number for the query. Default is 1."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/UserList"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/top": {
            "get": {
                "tags": [ "users" ],
                "summary": "get list of top users by post and reaction count",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Amount of posts to return. Allowed range is 1-30. Default is 10."
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Specify the pagination number for the query. Default is 1."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/TopUsers"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [ "users" ],
                "summary": "get specific user by ID",
                "description": "",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Discord ID of a User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "operation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },

    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Auth": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Access code (fragment identifier) supplied by Discord OAuth2",
                        "type": "string"
                    },
                    "uri": {
                        "description": "OAuth2 Redirect URL",
                        "type": "string"
                    }
                }
            },
            "Skim": {
                "type": "object",
                "description": "Skimmed data of a channel or user",
                "properties": {
                    "id": {
                        "description": "Discord ID",
                        "type": "string"
                    },
                    "name": {
                        "description": "Discord name",
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Discord user ID",
                        "type": "string"
                    },
                    "name": {
                        "description": "Discord user name",
                        "type": "string"
                    },
                    "reactions": {
                        "description": "Reaction count",
                        "type": "integer"
                    },
                    "deleted": {
                        "description": "Deleted post count",
                        "type": "integer"
                    },
                    "posts": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Post"
                        }
                    }
                }
            },
            "UserList": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "total post count",
                        "type": "integer"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Skim"
                        }
                    }
                }
            },
            "Post": {
                "type": "object",
                "description": "Posted message content",
                "properties": {
                    "id": {
                        "description": "message ID",
                        "type": "string"
                    },
                    "msgContent": {
                        "description": "message content",
                        "type": "string"
                    },
                    "msgAttachment": {
                        "description": "attachment url",
                        "type": "string"
                    },
                    "date": {
                        "description": "date content was saved",
                        "type": "string"
                    },
                    "reactions": {
                        "description": "reaction count",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#components/schemas/Skim"
                    },
                    "channel": {
                        "$ref": "#components/schemas/Skim"
                    }
                }
            },
            "PostList": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "total post count",
                        "type": "integer"
                    },
                    "posts": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Post"
                        }
                    }
                }
            },
            "TopChannels": {
                "type": "object",
                "properties": {
                    "posts": {
                        "description": "total post count",
                        "type": "integer"
                    },
                    "reactions": {
                        "description": "total reaction count",
                        "type": "integer"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "posts": {
                                    "description": "total post count",
                                    "type": "integer"
                                },
                                "reactions": {
                                    "description": "total reaction count",
                                    "type": "integer"
                                },
                                "channel": {
                                    "$ref": "#components/schemas/Skim"
                                }
                            }
                        }
                    }
                }
            },
            "TopUsers": {
                "type": "object",
                "properties": {
                    "posts": {
                        "description": "total post count",
                        "type": "integer"
                    },
                    "reactions": {
                        "description": "total reaction count",
                        "type": "integer"
                    },
                    "count": {
                        "description": "total user count",
                        "type": "integer"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "posts": {
                                    "description": "total post count",
                                    "type": "integer"
                                },
                                "reactions": {
                                    "description": "total reaction count",
                                    "type": "integer"
                                },
                                "user": {
                                    "$ref": "#components/schemas/Skim"
                                }
                            }
                        }
                    }
                }
            },
            "Timeline": {
                "type": "object",
                "properties": {
                    "time": {
                        "description": "the datetime of this timeline data",
                        "type": "string"
                    },
                    "posts": {
                        "description": "post count",
                        "type": "integer"
                    },
                    "reactions": {
                        "description": "reaction count",
                        "type": "integer"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
